<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf51422_xxac.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf51422_xxac.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Tue Oct 06 15:35:25 2015
<BR><P>
<H3>Maximum Stack Usage =        220 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; led_init &rArr; app_pwm_init &rArr; app_pwm_channel_init &rArr; nrf_drv_gpiote_out_init &rArr; channel_port_alloc
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">NMI_Handler</a><BR>
 <LI><a href="#[3]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">HardFault_Handler</a><BR>
 <LI><a href="#[4]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">SVC_Handler</a><BR>
 <LI><a href="#[5]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">PendSV_Handler</a><BR>
 <LI><a href="#[6]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SysTick_Handler</a><BR>
 <LI><a href="#[d]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">ADC_IRQHandler</a><BR>
 <LI><a href="#[28]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[27]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[d]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[15]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[14]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[c]">GPIOTE_IRQHandler</a> from nrf_drv_gpiote.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[2]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[5]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[18]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[8]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[13]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[11]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[17]">RTC1_IRQHandler</a> from app_timer.o(i.RTC1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b]">SPI1_TWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI0_IRQHandler</a> from app_timer.o(i.SWI0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1f]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[6]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[21]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[12]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER0_IRQHandler</a> from nrf_drv_timer.o(i.TIMER0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER1_IRQHandler</a> from nrf_drv_timer.o(i.TIMER1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">TIMER2_IRQHandler</a> from nrf_drv_timer.o(i.TIMER2_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[9]">UART0_IRQHandler</a> from app_uart.o(i.UART0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[22]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[20]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[24]">pwm_ready_callback</a> from main.o(i.pwm_ready_callback) referenced from main.o(i.led_init)
 <LI><a href="#[23]">pwm_ready_tick</a> from app_pwm.o(i.pwm_ready_tick) referenced from app_pwm.o(i.app_pwm_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[22]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[25]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[32]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[91]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[92]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[93]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[94]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[95]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[27]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>

<P><STRONG><a name="[28]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[1]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[96]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_get
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[99]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[2b]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[9a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2e]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[26]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[9b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[9c]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[9d]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[c]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, nrf_drv_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIOTE_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RTC1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_timer.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI0_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_timer.o(i.SWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SWI0_IRQHandler &rArr; list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expired_timers_handler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.TIMER0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER0_IRQHandler &rArr; nrf_drv_timer_interrupt_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_interrupt_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER1_IRQHandler &rArr; nrf_drv_timer_interrupt_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_interrupt_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.TIMER2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER2_IRQHandler &rArr; nrf_drv_timer_interrupt_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_interrupt_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>UART0_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, app_uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = UART0_IRQHandler &rArr; on_uart_event &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[87]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_uart.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
</UL>

<P><STRONG><a name="[9e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[9f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[a0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[89]"></a>action_tx_stop</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_uart.o(i.action_tx_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = action_tx_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
</UL>

<P><STRONG><a name="[8e]"></a>app_error_handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_error.o(i.app_error_handler))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[3f]"></a>app_pwm_channel_duty_get</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_channel_duty_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = app_pwm_channel_duty_get &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_cycle_ticks_get
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_transmit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>app_pwm_channel_duty_set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_channel_duty_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_cycle_ticks_get
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
</UL>

<P><STRONG><a name="[41]"></a>app_pwm_channel_duty_ticks_get</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_pwm.o(i.app_pwm_channel_duty_ticks_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_pwm_channel_duty_ticks_get
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_capture_get
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_get
</UL>

<P><STRONG><a name="[43]"></a>app_pwm_channel_duty_ticks_set</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_channel_duty_ticks_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
</UL>

<P><STRONG><a name="[40]"></a>app_pwm_cycle_ticks_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_pwm.o(i.app_pwm_cycle_ticks_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_pwm_cycle_ticks_get
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_capture_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_get
</UL>

<P><STRONG><a name="[53]"></a>app_pwm_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_pwm.o(i.app_pwm_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_pwm_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[55]"></a>app_pwm_init</STRONG> (Thumb, 362 bytes, Stack size 64 bytes, app_pwm.o(i.app_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = app_pwm_init &rArr; app_pwm_channel_init &rArr; nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pan73_workaround
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_us_to_ticks
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_extended_compare
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_disable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[61]"></a>blink</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, main.o(i.blink))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = blink &rArr; color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_transmit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_setup
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_setup
</UL>

<P><STRONG><a name="[64]"></a>clock_setup</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, main.o(i.clock_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = clock_setup &rArr; blink &rArr; color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>color</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, main.o(i.color))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_transmit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_setup
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>

<P><STRONG><a name="[76]"></a>critical_region_enter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_util_platform.o(i.critical_region_enter))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
</UL>

<P><STRONG><a name="[78]"></a>critical_region_exit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_util_platform.o(i.critical_region_exit))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
</UL>

<P><STRONG><a name="[68]"></a>led_init</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, main.o(i.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = led_init &rArr; app_pwm_init &rArr; app_pwm_channel_init &rArr; nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_enable
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>main</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = main &rArr; led_init &rArr; app_pwm_init &rArr; app_pwm_channel_init &rArr; nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_get
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_transmit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_setup
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;radio_receive
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clock_setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[70]"></a>mesh</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, main.o(i.mesh))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = mesh &rArr; color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_get
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_delay.o(i.nrf_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>

<P><STRONG><a name="[72]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_init
</UL>

<P><STRONG><a name="[58]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_gpiote_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[57]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_is_init))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[4b]"></a>nrf_drv_gpiote_out_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[4f]"></a>nrf_drv_gpiote_out_task_addr_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_addr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_gpiote_out_task_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[4c]"></a>nrf_drv_gpiote_out_task_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[8c]"></a>nrf_drv_gpiote_out_task_force</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_force))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
</UL>

<P><STRONG><a name="[52]"></a>nrf_drv_gpiote_out_task_trigger</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_gpiote_out_task_trigger
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[74]"></a>nrf_drv_gpiote_out_uninit</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_out_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[4d]"></a>nrf_drv_ppi_channel_alloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_channel_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_exit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_enter
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[51]"></a>nrf_drv_ppi_channel_assign</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_assign))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[4e]"></a>nrf_drv_ppi_channel_disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_channel
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_channel_ppi_disable
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[7a]"></a>nrf_drv_ppi_channel_enable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_enable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_channel
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
</UL>

<P><STRONG><a name="[7b]"></a>nrf_drv_ppi_channel_free</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_free
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_exit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_enter
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[7d]"></a>nrf_drv_ppi_channels_include_in_group</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channels_include_in_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_exit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_enter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;are_app_channels
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
</UL>

<P><STRONG><a name="[80]"></a>nrf_drv_ppi_channels_remove_from_group</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channels_remove_from_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channels_remove_from_group
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_exit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_enter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;are_app_channels
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
</UL>

<P><STRONG><a name="[59]"></a>nrf_drv_ppi_group_alloc</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_group_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_exit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_enter
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[81]"></a>nrf_drv_ppi_group_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_ppi_group_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
</UL>

<P><STRONG><a name="[82]"></a>nrf_drv_ppi_group_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_ppi_group_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
</UL>

<P><STRONG><a name="[83]"></a>nrf_drv_ppi_group_free</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_group_free
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_exit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;critical_region_enter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[56]"></a>nrf_drv_ppi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_init))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[44]"></a>nrf_drv_timer_capture_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_capture_get))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_cycle_ticks_get
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_get
</UL>

<P><STRONG><a name="[5d]"></a>nrf_drv_timer_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_clear))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[84]"></a>nrf_drv_timer_compare</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_extended_compare
</UL>

<P><STRONG><a name="[50]"></a>nrf_drv_timer_compare_event_address_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare_event_address_get))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[5f]"></a>nrf_drv_timer_compare_int_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ready_tick
</UL>

<P><STRONG><a name="[49]"></a>nrf_drv_timer_compare_int_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_timer_compare_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[86]"></a>nrf_drv_timer_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_disable))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_uninit
</UL>

<P><STRONG><a name="[54]"></a>nrf_drv_timer_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_enable
</UL>

<P><STRONG><a name="[5e]"></a>nrf_drv_timer_extended_compare</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, nrf_drv_timer.o(i.nrf_drv_timer_extended_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_drv_timer_extended_compare &rArr; nrf_drv_timer_compare
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[5b]"></a>nrf_drv_timer_init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, nrf_drv_timer.o(i.nrf_drv_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_timer_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[85]"></a>nrf_drv_timer_uninit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, nrf_drv_timer.o(i.nrf_drv_timer_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_timer_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[5c]"></a>nrf_drv_timer_us_to_ticks</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_us_to_ticks))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[24]"></a>pwm_ready_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(i.pwm_ready_callback))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.led_init)
</UL>
<P><STRONG><a name="[23]"></a>pwm_ready_tick</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_pwm.o(i.pwm_ready_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwm_ready_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwm.o(i.app_pwm_init)
</UL>
<P><STRONG><a name="[6f]"></a>radio_receive</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, main.o(i.radio_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = radio_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>radio_setup</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, main.o(i.radio_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = radio_setup &rArr; blink &rArr; color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>radio_transmit</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, main.o(i.radio_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = radio_transmit &rArr; blink &rArr; color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_get
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>sync</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, main.o(i.sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sync &rArr; blink &rArr; color &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;color
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blink
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3c]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[71]"></a>channel_free</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_free))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[73]"></a>channel_port_alloc</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.channel_port_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[34]"></a>channel_port_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_port_get))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_trigger
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[35]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_gpio_cfg_sense_set))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_gpiote_event_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>pin_in_use_by_te</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.pin_in_use_by_te))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
</UL>

<P><STRONG><a name="[67]"></a>are_app_channels</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.are_app_channels))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_channel
</UL>

<P><STRONG><a name="[77]"></a>is_allocated_channel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_allocated_channel))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
</UL>

<P><STRONG><a name="[7f]"></a>is_allocated_group</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_allocated_group))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_enable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
</UL>

<P><STRONG><a name="[66]"></a>is_app_channel</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.is_app_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;are_app_channels
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
</UL>

<P><STRONG><a name="[7e]"></a>is_app_group</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_app_group))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
</UL>

<P><STRONG><a name="[79]"></a>is_programmable_app_channel</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_programmable_app_channel))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
</UL>

<P><STRONG><a name="[3d]"></a>nrf_drv_timer_interrupt_handle</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, nrf_drv_timer.o(i.nrf_drv_timer_interrupt_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_timer_interrupt_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_IRQHandler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER0_IRQHandler
</UL>

<P><STRONG><a name="[88]"></a>action_uart_deactivate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_uart.o(i.action_uart_deactivate))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_uart_event
</UL>

<P><STRONG><a name="[3e]"></a>on_uart_event</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, app_uart.o(i.on_uart_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = on_uart_event &rArr; action_tx_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_tx_stop
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;action_uart_deactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>app_pwm_channel_init</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, app_pwm.o(i.app_pwm_channel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = app_pwm_channel_init &rArr; nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_trigger
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[7c]"></a>nrf_drv_ppi_channel_include_in_group</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_pwm.o(i.nrf_drv_ppi_channel_include_in_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
</UL>

<P><STRONG><a name="[60]"></a>pan73_workaround</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_pwm.o(i.pan73_workaround))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[8a]"></a>pwm_channel_ppi_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_pwm.o(i.pwm_channel_ppi_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pwm_channel_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
</UL>

<P><STRONG><a name="[5a]"></a>pwm_dealloc</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, app_pwm.o(i.pwm_dealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pwm_dealloc &rArr; nrf_drv_ppi_group_free
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[8b]"></a>pwm_ppi_disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_pwm.o(i.pwm_ppi_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pwm_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
</UL>

<P><STRONG><a name="[45]"></a>pwm_transition_0or100_to_0or100</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, app_pwm.o(i.pwm_transition_0or100_to_0or100))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pwm_transition_0or100_to_0or100 &rArr; pwm_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_force
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_channel_ppi_disable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[46]"></a>pwm_transition_0or100_to_n</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, app_pwm.o(i.pwm_transition_0or100_to_n))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwm_transition_0or100_to_n &rArr; pwm_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_channel_ppi_disable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[47]"></a>pwm_transition_n_to_0or100</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, app_pwm.o(i.pwm_transition_n_to_0or100))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pwm_transition_n_to_0or100 &rArr; pwm_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[48]"></a>pwm_transition_n_to_m</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, app_pwm.o(i.pwm_transition_n_to_m))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_enable
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_disable
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[3b]"></a>compare_reg_update</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_timer.o(i.compare_reg_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[37]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(i.elapsed_ticks_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[39]"></a>expired_timers_handler</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_timer.o(i.expired_timers_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = expired_timers_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[38]"></a>list_deletions_handler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, app_timer.o(i.list_deletions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = list_deletions_handler &rArr; timer_list_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[3a]"></a>list_insertions_handler</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, app_timer.o(i.list_insertions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>rtc1_stop</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_timer.o(i.rtc1_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[8f]"></a>timer_list_handler_sched</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(i.timer_list_handler_sched))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[6b]"></a>timer_list_insert</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, app_timer.o(i.timer_list_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[6a]"></a>timer_list_remove</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_timer.o(i.timer_list_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
</UL>

<P><STRONG><a name="[36]"></a>timer_timeouts_check</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_timer.o(i.timer_timeouts_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
